apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: rfcn-fp32-inference-wf # {"$openapi":"WORKFLOW_NAME"}
spec:
  entrypoint: rfcn-fp32-inference # {"$openapi":"MODEL_NAME"}
  name: rfcn-fp32-inference # {"$openapi":"MODEL_NAME"}
  templates:
  - name: rfcn-fp32-inference # {"$openapi":"MODEL_NAME"}
    steps:
    - - name: preprocess-coco
        template: preprocess-coco
    - - name: rfcn-fp32-accuracy
        template: rfcn-fp32-accuracy
  - name: preprocess-coco
    securityContext:
      runAsUser: 0 # {"$openapi":"USER_ID"}
      runAsGroup: 0 # {"$openapi":"GROUP_ID"}
      fsGroup: 0 # {"$openapi":"FS_ID"}
    container:
      image: docker.io/intel/object-detection:tf-1.15.2-preprocess-coco-val # {"$openapi":"PREPROCESS_IMAGE"}
      command: # {"$openapi":"PREPROCESS_COMMAND"}
      - /workspace/preprocess-coco-val/scripts/preprocess_coco_val.sh # {"$openapi":"PREPROCESS_COMMAND"}
      envFrom:
      - configMapRef:
          name: rfcn-fp32-inference # {"$openapi":"MODEL_NAME"}
      volumeMounts:
      - name: pvc-path
        mountPath: /pvc # {"$openapi":"PVC_PATH"}
      - name: coco-raw-data
        mountPath: /datasets # {"$openapi":"DATASET_DIR"}
        readOnly: true
    volumes:
    - name: coco-raw-data
      hostPath:
        path: /datasets # {"$openapi":"DATASET_DIR"}
    - name: pvc-path
      persistentVolumeClaim:
        claimName: workdisk # {"$openapi":"PVC_NAME"}
  - name: rfcn-fp32-accuracy
    securityContext:
      runAsUser: 0 # {"$openapi":"USER_ID"}
      runAsGroup: 0 # {"$openapi":"GROUP_ID"}
      fsGroup: 0 # {"$openapi":"FS_ID"}
    container:
      image: docker.io/intel/object-detection:tf-latest-rfcn-fp32-inference # {"$openapi":"IMAGE"}
      imagePullPolicy: Always
      command: # {"$openapi":"MODEL_COMMAND"}
      - /workspace/rfcn-fp32-inference/quickstart/fp32_accuracy.sh # {"$openapi":"MODEL_COMMAND"}
      envFrom:
      - configMapRef:
          name: rfcn-fp32-inference # {"$openapi":"MODEL_NAME"}
      volumeMounts:
      - name: coco-raw-data
        mountPath: /datasets # {"$openapi":"DATASET_DIR"}
        readOnly: true
      - name: pvc-path
        mountPath: /pvc # {"$openapi":"PVC_PATH"}
    volumes:
    - name: coco-raw-data
      hostPath:
        path: /datasets # {"$openapi":"DATASET_DIR"}
    - name: pvc-path
      persistentVolumeClaim:
        claimName: workdisk # {"$openapi":"PVC_NAME"}
