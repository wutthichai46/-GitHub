From 8cd9fecd52ec02b5b540983a2bacedf1348764ef Mon Sep 17 00:00:00 2001
From: ltsai1 <louie.tsai@intel.com>
Date: Thu, 2 Jul 2020 14:22:52 -0700
Subject: [PATCH] densenet169 infer fp32

---
 .../densenet169/inference/fp32/benchmark.py    | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/models/image_recognition/tensorflow/densenet169/inference/fp32/benchmark.py b/models/image_recognition/tensorflow/densenet169/inference/fp32/benchmark.py
index f984fdec..76023315 100644
--- a/models/image_recognition/tensorflow/densenet169/inference/fp32/benchmark.py
+++ b/models/image_recognition/tensorflow/densenet169/inference/fp32/benchmark.py
@@ -45,6 +45,11 @@ from tensorflow.core.protobuf import rewriter_config_pb2
 from google.protobuf import text_format
 import tensorflow as tf
 
+import sys
+import os
+sys.path.append(os.environ['ProfileUtilsRoot'])
+from profile_utils import TimeLiner, ConfigFile, tfSession
+
 def load_graph(model_file):
   graph = tf.Graph()
   graph_def = tf.compat.v1.GraphDef()
@@ -110,6 +115,11 @@ if __name__ == "__main__":
   num_inter_threads = args.num_inter_threads
   num_intra_threads = args.num_intra_threads
 
+  configf = ConfigFile(confpath=os.environ['ProfileUtilsRoot']+"/topo.ini")
+  configf.read_config('densenet169 infer fp32')
+  infer_many_runs_timeline = TimeLiner()
+  infer_run_metadata = tf.compat.v1.RunMetadata()
+
   data_graph = tf.Graph() ##
   with data_graph.as_default():##
     input_shape = [batch_size, input_height, input_width, 3]
@@ -142,8 +152,10 @@ if __name__ == "__main__":
   data_config.inter_op_parallelism_threads = num_inter_threads ###
   data_config.intra_op_parallelism_threads = num_intra_threads ###
   
-  data_sess = tf.compat.v1.Session(graph=data_graph, config=data_config) ###
-  with tf.compat.v1.Session(graph=graph, config=config) as sess:
+  data_sess = tfSession(graph=data_graph,  config=data_config,
+    run_metadata=infer_run_metadata, many_runs_timeline=infer_many_runs_timeline)
+  with tfSession(graph=graph, config=config, run_metadata=infer_run_metadata,
+	 many_runs_timeline=infer_many_runs_timeline) as sess:
     sys.stdout.flush()
     print("[Running warmup steps...]")
     image_data = data_sess.run(images) ###
@@ -168,3 +180,5 @@ if __name__ == "__main__":
     		"".format(t+1, batch_size*(t+1)/avg));
         print("       Latency: {0} ms"
                 "".format(avg*1000. /(t+1)))
+  print("json_fname : ",configf.json_fname)
+  infer_many_runs_timeline.save(configf.json_fname)
-- 
2.22.1

